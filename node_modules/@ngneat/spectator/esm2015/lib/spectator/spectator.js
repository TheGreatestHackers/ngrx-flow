import { ChangeDetectorRef } from '@angular/core';
import { DomSpectator } from '../base/dom-spectator';
/**
 * @publicApi
 */
export class Spectator extends DomSpectator {
    constructor(fixture, debugElement, instance, element) {
        super(fixture, debugElement, instance, element);
        this.fixture = fixture;
        this.debugElement = debugElement;
        this.instance = instance;
        this.element = element;
    }
    get component() {
        return this.instance;
    }
    inject(token, fromComponentInjector = false) {
        if (fromComponentInjector) {
            return this.debugElement.injector.get(token);
        }
        return super.inject(token);
    }
    detectComponentChanges() {
        if (this.debugElement) {
            this.debugElement.injector.get(ChangeDetectorRef).detectChanges();
        }
        else {
            this.detectChanges();
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BlY3RhdG9yLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uZXRhbmVsYmFzYWwvd3d3L3NwZWN0YXRvci9wcm9qZWN0cy9zcGVjdGF0b3Ivc3JjLyIsInNvdXJjZXMiOlsibGliL3NwZWN0YXRvci9zcGVjdGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFvRCxNQUFNLGVBQWUsQ0FBQztBQUtwRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFckQ7O0dBRUc7QUFDSCxNQUFNLE9BQU8sU0FBYSxTQUFRLFlBQWU7SUFDL0MsWUFBbUIsT0FBNEIsRUFBUyxZQUEwQixFQUFZLFFBQVcsRUFBUyxPQUFvQjtRQUNwSSxLQUFLLENBQUMsT0FBTyxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFEL0IsWUFBTyxHQUFQLE9BQU8sQ0FBcUI7UUFBUyxpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUFZLGFBQVEsR0FBUixRQUFRLENBQUc7UUFBUyxZQUFPLEdBQVAsT0FBTyxDQUFhO0lBRXRJLENBQUM7SUFFRCxJQUFXLFNBQVM7UUFDbEIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFFTSxNQUFNLENBQUksS0FBZSxFQUFFLHdCQUFpQyxLQUFLO1FBQ3RFLElBQUkscUJBQXFCLEVBQUU7WUFDekIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFpQixDQUFDO1NBQzlEO1FBRUQsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFFTSxzQkFBc0I7UUFDM0IsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3JCLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLGFBQWEsRUFBRSxDQUFDO1NBQ25FO2FBQU07WUFDTCxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7U0FDdEI7SUFDSCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRGVidWdFbGVtZW50LCBJbmplY3Rpb25Ub2tlbiwgVHlwZSwgQWJzdHJhY3RUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21wb25lbnRGaXh0dXJlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZS90ZXN0aW5nJztcblxuaW1wb3J0IHsgU3B5T2JqZWN0IH0gZnJvbSAnLi4vbW9jayc7XG5pbXBvcnQgeyBUb2tlbiB9IGZyb20gJy4uL3Rva2VuJztcbmltcG9ydCB7IERvbVNwZWN0YXRvciB9IGZyb20gJy4uL2Jhc2UvZG9tLXNwZWN0YXRvcic7XG5cbi8qKlxuICogQHB1YmxpY0FwaVxuICovXG5leHBvcnQgY2xhc3MgU3BlY3RhdG9yPEM+IGV4dGVuZHMgRG9tU3BlY3RhdG9yPEM+IHtcbiAgY29uc3RydWN0b3IocHVibGljIGZpeHR1cmU6IENvbXBvbmVudEZpeHR1cmU8Qz4sIHB1YmxpYyBkZWJ1Z0VsZW1lbnQ6IERlYnVnRWxlbWVudCwgcHJvdGVjdGVkIGluc3RhbmNlOiBDLCBwdWJsaWMgZWxlbWVudDogSFRNTEVsZW1lbnQpIHtcbiAgICBzdXBlcihmaXh0dXJlLCBkZWJ1Z0VsZW1lbnQsIGluc3RhbmNlLCBlbGVtZW50KTtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgY29tcG9uZW50KCk6IEMge1xuICAgIHJldHVybiB0aGlzLmluc3RhbmNlO1xuICB9XG5cbiAgcHVibGljIGluamVjdDxUPih0b2tlbjogVG9rZW48VD4sIGZyb21Db21wb25lbnRJbmplY3RvcjogYm9vbGVhbiA9IGZhbHNlKTogU3B5T2JqZWN0PFQ+IHtcbiAgICBpZiAoZnJvbUNvbXBvbmVudEluamVjdG9yKSB7XG4gICAgICByZXR1cm4gdGhpcy5kZWJ1Z0VsZW1lbnQuaW5qZWN0b3IuZ2V0KHRva2VuKSBhcyBTcHlPYmplY3Q8VD47XG4gICAgfVxuXG4gICAgcmV0dXJuIHN1cGVyLmluamVjdCh0b2tlbik7XG4gIH1cblxuICBwdWJsaWMgZGV0ZWN0Q29tcG9uZW50Q2hhbmdlcygpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5kZWJ1Z0VsZW1lbnQpIHtcbiAgICAgIHRoaXMuZGVidWdFbGVtZW50LmluamVjdG9yLmdldChDaGFuZ2VEZXRlY3RvclJlZikuZGV0ZWN0Q2hhbmdlcygpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmRldGVjdENoYW5nZXMoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==