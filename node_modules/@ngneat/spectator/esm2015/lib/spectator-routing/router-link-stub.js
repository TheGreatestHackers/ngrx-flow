import { Directive, HostListener, Input, NgModule } from '@angular/core';
import { RouterLink } from '@angular/router';
// tslint:disable
export class RouterLinkDirectiveStub {
    constructor() {
        this.navigatedTo = null;
    }
    onClick() {
        this.navigatedTo = this.routerLink;
        return true;
    }
}
RouterLinkDirectiveStub.decorators = [
    { type: Directive, args: [{
                selector: '[routerLink]',
                providers: [
                    {
                        provide: RouterLink,
                        useExisting: RouterLinkDirectiveStub
                    }
                ]
            },] }
];
RouterLinkDirectiveStub.propDecorators = {
    routerLink: [{ type: Input }],
    onClick: [{ type: HostListener, args: ['click',] }]
};
/*
  This is an unused module to resolve the ng build error:
    'Cannot determine the module for class RouterLinkDirectiveStub'

  Reference: https://github.com/angular/issues/13590
*/
export class RouterLinkDirectiveStubModule {
}
RouterLinkDirectiveStubModule.decorators = [
    { type: NgModule, args: [{
                declarations: [RouterLinkDirectiveStub]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLWxpbmstc3R1Yi5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbmV0YW5lbGJhc2FsL3d3dy9zcGVjdGF0b3IvcHJvamVjdHMvc3BlY3RhdG9yL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9zcGVjdGF0b3Itcm91dGluZy9yb3V0ZXItbGluay1zdHViLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRTdDLGlCQUFpQjtBQVdqQixNQUFNLE9BQU8sdUJBQXVCO0lBVHBDO1FBWUUsZ0JBQVcsR0FBUSxJQUFJLENBQUM7SUFRMUIsQ0FBQztJQUxDLE9BQU87UUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7UUFFbkMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOzs7WUFuQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxjQUFjO2dCQUN4QixTQUFTLEVBQUU7b0JBQ1Q7d0JBQ0UsT0FBTyxFQUFFLFVBQVU7d0JBQ25CLFdBQVcsRUFBRSx1QkFBdUI7cUJBQ3JDO2lCQUNGO2FBQ0Y7Ozt5QkFFRSxLQUFLO3NCQUlMLFlBQVksU0FBQyxPQUFPOztBQVF2Qjs7Ozs7RUFLRTtBQUlGLE1BQU0sT0FBTyw2QkFBNkI7OztZQUh6QyxRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFLENBQUMsdUJBQXVCLENBQUM7YUFDeEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RMaXN0ZW5lciwgSW5wdXQsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJMaW5rIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuLy8gdHNsaW50OmRpc2FibGVcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3JvdXRlckxpbmtdJyxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogUm91dGVyTGluayxcbiAgICAgIHVzZUV4aXN0aW5nOiBSb3V0ZXJMaW5rRGlyZWN0aXZlU3R1YlxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBSb3V0ZXJMaW5rRGlyZWN0aXZlU3R1YiB7XG4gIEBJbnB1dCgpIHJvdXRlckxpbms6IGFueTtcblxuICBuYXZpZ2F0ZWRUbzogYW55ID0gbnVsbDtcblxuICBASG9zdExpc3RlbmVyKCdjbGljaycpXG4gIG9uQ2xpY2soKTogYm9vbGVhbiB7XG4gICAgdGhpcy5uYXZpZ2F0ZWRUbyA9IHRoaXMucm91dGVyTGluaztcblxuICAgIHJldHVybiB0cnVlO1xuICB9XG59XG5cbi8qXG4gIFRoaXMgaXMgYW4gdW51c2VkIG1vZHVsZSB0byByZXNvbHZlIHRoZSBuZyBidWlsZCBlcnJvcjpcbiAgICAnQ2Fubm90IGRldGVybWluZSB0aGUgbW9kdWxlIGZvciBjbGFzcyBSb3V0ZXJMaW5rRGlyZWN0aXZlU3R1YidcblxuICBSZWZlcmVuY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2lzc3Vlcy8xMzU5MFxuKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1JvdXRlckxpbmtEaXJlY3RpdmVTdHViXVxufSlcbmV4cG9ydCBjbGFzcyBSb3V0ZXJMaW5rRGlyZWN0aXZlU3R1Yk1vZHVsZSB7fVxuIl19