import { getChildren, setProps } from '../internals/query';
import { Spectator } from '../spectator/spectator';
import { isString } from '../types';
/**
 * @publicApi
 */
export class SpectatorHost extends Spectator {
    constructor(hostComponent, hostDebugElement, hostElement, hostFixture, debugElement, componentInstance, element) {
        super(hostFixture, debugElement, componentInstance, element);
        this.hostComponent = hostComponent;
        this.hostDebugElement = hostDebugElement;
        this.hostElement = hostElement;
        this.hostFixture = hostFixture;
        this.debugElement = debugElement;
        this.element = element;
    }
    queryHost(directiveOrSelector, options) {
        if ((options || {}).root && isString(directiveOrSelector)) {
            return document.querySelector(directiveOrSelector);
        }
        return getChildren(this.hostDebugElement)(directiveOrSelector, options)[0] || null;
    }
    queryHostAll(directiveOrSelector, options) {
        if ((options || {}).root && isString(directiveOrSelector)) {
            return Array.from(document.querySelectorAll(directiveOrSelector));
        }
        return getChildren(this.hostDebugElement)(directiveOrSelector, options);
    }
    setHostInput(input, value) {
        setProps(this.hostComponent, input, value, false);
        this.detectChanges();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BlY3RhdG9yLWhvc3QuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL25ldGFuZWxiYXNhbC93d3cvc3BlY3RhdG9yL3Byb2plY3RzL3NwZWN0YXRvci9zcmMvIiwic291cmNlcyI6WyJsaWIvc3BlY3RhdG9yLWhvc3Qvc3BlY3RhdG9yLWhvc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFbkQsT0FBTyxFQUFFLFFBQVEsRUFBMkIsTUFBTSxVQUFVLENBQUM7QUFJN0Q7O0dBRUc7QUFDSCxNQUFNLE9BQU8sYUFBb0MsU0FBUSxTQUFZO0lBQ25FLFlBQ1MsYUFBZ0IsRUFDaEIsZ0JBQThCLEVBQzlCLFdBQW9CLEVBQ3BCLFdBQWtDLEVBQ2xDLFlBQTBCLEVBQ2pDLGlCQUFvQixFQUNiLE9BQW9CO1FBRTNCLEtBQUssQ0FBQyxXQUFXLEVBQUUsWUFBWSxFQUFFLGlCQUFpQixFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBUnRELGtCQUFhLEdBQWIsYUFBYSxDQUFHO1FBQ2hCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBYztRQUM5QixnQkFBVyxHQUFYLFdBQVcsQ0FBUztRQUNwQixnQkFBVyxHQUFYLFdBQVcsQ0FBdUI7UUFDbEMsaUJBQVksR0FBWixZQUFZLENBQWM7UUFFMUIsWUFBTyxHQUFQLE9BQU8sQ0FBYTtJQUc3QixDQUFDO0lBS00sU0FBUyxDQUFJLG1CQUE4QixFQUFFLE9BQXlCO1FBQzNFLElBQUksQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxJQUFJLFFBQVEsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFO1lBQ3pELE9BQU8sUUFBUSxDQUFDLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1NBQ3BEO1FBRUQsT0FBTyxXQUFXLENBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsbUJBQW1CLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDO0lBQ3hGLENBQUM7SUFLTSxZQUFZLENBQUksbUJBQThCLEVBQUUsT0FBeUI7UUFDOUUsSUFBSSxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFDLG1CQUFtQixDQUFDLEVBQUU7WUFDekQsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUM7U0FDbkU7UUFFRCxPQUFPLFdBQVcsQ0FBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxtQkFBbUIsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUM3RSxDQUFDO0lBSU0sWUFBWSxDQUFDLEtBQVUsRUFBRSxLQUFXO1FBQ3pDLFFBQVEsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDbEQsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERlYnVnRWxlbWVudCwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tcG9uZW50Rml4dHVyZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUvdGVzdGluZyc7XG5cbmltcG9ydCB7IERPTVNlbGVjdG9yIH0gZnJvbSAnLi4vZG9tLXNlbGVjdG9ycyc7XG5pbXBvcnQgeyBnZXRDaGlsZHJlbiwgc2V0UHJvcHMgfSBmcm9tICcuLi9pbnRlcm5hbHMvcXVlcnknO1xuaW1wb3J0IHsgU3BlY3RhdG9yIH0gZnJvbSAnLi4vc3BlY3RhdG9yL3NwZWN0YXRvcic7XG5pbXBvcnQgeyBUb2tlbiB9IGZyb20gJy4uL3Rva2VuJztcbmltcG9ydCB7IGlzU3RyaW5nLCBRdWVyeU9wdGlvbnMsIFF1ZXJ5VHlwZSB9IGZyb20gJy4uL3R5cGVzJztcblxuaW1wb3J0IHsgSG9zdENvbXBvbmVudCB9IGZyb20gJy4vaG9zdC1jb21wb25lbnQnO1xuXG4vKipcbiAqIEBwdWJsaWNBcGlcbiAqL1xuZXhwb3J0IGNsYXNzIFNwZWN0YXRvckhvc3Q8QywgSCA9IEhvc3RDb21wb25lbnQ+IGV4dGVuZHMgU3BlY3RhdG9yPEM+IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGhvc3RDb21wb25lbnQ6IEgsXG4gICAgcHVibGljIGhvc3REZWJ1Z0VsZW1lbnQ6IERlYnVnRWxlbWVudCxcbiAgICBwdWJsaWMgaG9zdEVsZW1lbnQ6IEVsZW1lbnQsXG4gICAgcHVibGljIGhvc3RGaXh0dXJlOiBDb21wb25lbnRGaXh0dXJlPGFueT4sXG4gICAgcHVibGljIGRlYnVnRWxlbWVudDogRGVidWdFbGVtZW50LFxuICAgIGNvbXBvbmVudEluc3RhbmNlOiBDLFxuICAgIHB1YmxpYyBlbGVtZW50OiBIVE1MRWxlbWVudFxuICApIHtcbiAgICBzdXBlcihob3N0Rml4dHVyZSwgZGVidWdFbGVtZW50LCBjb21wb25lbnRJbnN0YW5jZSwgZWxlbWVudCk7XG4gIH1cblxuICBwdWJsaWMgcXVlcnlIb3N0PFIgZXh0ZW5kcyBFbGVtZW50PihzZWxlY3Rvcjogc3RyaW5nIHwgRE9NU2VsZWN0b3IsIG9wdGlvbnM/OiB7IHJvb3Q6IGJvb2xlYW4gfSk6IFIgfCBudWxsO1xuICBwdWJsaWMgcXVlcnlIb3N0PFI+KGRpcmVjdGl2ZTogVHlwZTxSPik6IFIgfCBudWxsO1xuICBwdWJsaWMgcXVlcnlIb3N0PFI+KGRpcmVjdGl2ZU9yU2VsZWN0b3I6IFR5cGU8YW55PiB8IHN0cmluZywgb3B0aW9uczogeyByZWFkOiBUb2tlbjxSPiB9KTogUiB8IG51bGw7XG4gIHB1YmxpYyBxdWVyeUhvc3Q8Uj4oZGlyZWN0aXZlT3JTZWxlY3RvcjogUXVlcnlUeXBlLCBvcHRpb25zPzogUXVlcnlPcHRpb25zPFI+KTogUiB8IEVsZW1lbnQgfCBudWxsIHtcbiAgICBpZiAoKG9wdGlvbnMgfHwge30pLnJvb3QgJiYgaXNTdHJpbmcoZGlyZWN0aXZlT3JTZWxlY3RvcikpIHtcbiAgICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGRpcmVjdGl2ZU9yU2VsZWN0b3IpO1xuICAgIH1cblxuICAgIHJldHVybiBnZXRDaGlsZHJlbjxSPih0aGlzLmhvc3REZWJ1Z0VsZW1lbnQpKGRpcmVjdGl2ZU9yU2VsZWN0b3IsIG9wdGlvbnMpWzBdIHx8IG51bGw7XG4gIH1cblxuICBwdWJsaWMgcXVlcnlIb3N0QWxsPFIgZXh0ZW5kcyBFbGVtZW50PihzZWxlY3Rvcjogc3RyaW5nIHwgRE9NU2VsZWN0b3IsIG9wdGlvbnM/OiB7IHJvb3Q6IGJvb2xlYW4gfSk6IFJbXTtcbiAgcHVibGljIHF1ZXJ5SG9zdEFsbDxSPihkaXJlY3RpdmU6IFR5cGU8Uj4pOiBSW107XG4gIHB1YmxpYyBxdWVyeUhvc3RBbGw8Uj4oZGlyZWN0aXZlT3JTZWxlY3RvcjogVHlwZTxhbnk+IHwgc3RyaW5nLCBvcHRpb25zOiB7IHJlYWQ6IFRva2VuPFI+IH0pOiBSW107XG4gIHB1YmxpYyBxdWVyeUhvc3RBbGw8Uj4oZGlyZWN0aXZlT3JTZWxlY3RvcjogUXVlcnlUeXBlLCBvcHRpb25zPzogUXVlcnlPcHRpb25zPFI+KTogUltdIHwgRWxlbWVudFtdIHtcbiAgICBpZiAoKG9wdGlvbnMgfHwge30pLnJvb3QgJiYgaXNTdHJpbmcoZGlyZWN0aXZlT3JTZWxlY3RvcikpIHtcbiAgICAgIHJldHVybiBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoZGlyZWN0aXZlT3JTZWxlY3RvcikpO1xuICAgIH1cblxuICAgIHJldHVybiBnZXRDaGlsZHJlbjxSPih0aGlzLmhvc3REZWJ1Z0VsZW1lbnQpKGRpcmVjdGl2ZU9yU2VsZWN0b3IsIG9wdGlvbnMpO1xuICB9XG5cbiAgcHVibGljIHNldEhvc3RJbnB1dDxLIGV4dGVuZHMga2V5b2YgSD4oaW5wdXQ6IFBhcnRpYWw8SD4pOiB2b2lkO1xuICBwdWJsaWMgc2V0SG9zdElucHV0PEsgZXh0ZW5kcyBrZXlvZiBIPihpbnB1dDogSywgaW5wdXRWYWx1ZTogSFtLXSk6IHZvaWQ7XG4gIHB1YmxpYyBzZXRIb3N0SW5wdXQoaW5wdXQ6IGFueSwgdmFsdWU/OiBhbnkpOiB2b2lkIHtcbiAgICBzZXRQcm9wcyh0aGlzLmhvc3RDb21wb25lbnQsIGlucHV0LCB2YWx1ZSwgZmFsc2UpO1xuICAgIHRoaXMuZGV0ZWN0Q2hhbmdlcygpO1xuICB9XG59XG4iXX0=